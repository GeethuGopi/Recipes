{"version":3,"sources":["Recipes.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipes","title","calories","img","ingredients","className","style","recipe","map","ingredient","text","image","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6PAeeA,EAbC,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,SAASC,EAAqB,EAArBA,IAAIC,EAAiB,EAAjBA,YACjC,OAAS,sBAAKC,UAAWC,IAAMC,OAAtB,UACL,6BAAKN,IACF,6BACCG,EAAYI,KAAI,SAACC,GAAD,OAChB,6BAAKA,EAAWC,YAGpB,2CAAcR,KACd,qBAAKG,UAAWC,IAAMK,MAAOC,IAAKT,EAAKU,IAAI,SC2CpCC,MAnDf,WACE,IAEA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAyBJ,mBAAS,WAAlC,mBAAOK,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBAVf,WAUe,oBATd,uCAQG,cACXM,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAMjBX,EAAWW,EAAKC,MANC,2CAAH,qDAgBhB,OARAC,QAAQC,IAAIf,GASV,sBAAKX,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAc2B,SARjB,SAACC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKR,UACE,uBAAOd,UAAU,aAAa8B,KAAK,OAAOC,MAAOlB,EAAQmB,SAAU,SAACJ,GAAD,OAAKd,EAAUc,EAAEK,OAAOF,UAC3F,wBAAQ/B,UAAU,gBAAgB8B,KAAK,SAAvC,uBAIF,qBAAK9B,UAAU,UAAf,SACCW,EAAQR,KAAI,SAACD,GAAD,OAEX,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAOgC,MACrBrC,SAAUK,EAAOA,OAAOL,SACxBC,IAAKI,EAAOA,OAAOI,MACnBP,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOgC,gBC7BdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.97e95735.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from \"./recipe.module.css\"//using css module we can encapsulate css to a particular component\r\nconst Recipes = ({title,calories,img,ingredients}) => {\r\n    return ( <div className={style.recipe}>\r\n        <h1>{title}</h1>\r\n           <ol>\r\n           {ingredients.map((ingredient)=>(\r\n            <li>{ingredient.text}</li>\r\n        ))}\r\n        </ol>\r\n        <p>Calories: {calories}</p>\r\n        <img className={style.image} src={img} alt=\"\"></img>\r\n        </div> );\r\n}\r\n \r\nexport default Recipes;","import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Recipes from \"./Recipes\";\r\nfunction App() {\r\n  const App_Id = \"5d85251d\";\r\n  const App_Key = \"5282fc45a660b5c3057d88a7bd6eb858\t\";\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search,setSearch] = useState('');\r\n  const [query,setQuery] = useState('chicken');\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(\r\n      `https://api.edamam.com/search?q=${query}&app_id=${App_Id}&app_key=${App_Key}`\r\n    );\r\n    const data = await response.json();\r\n    //console.log(data)\r\n    setRecipes(data.hits);\r\n  };\r\n  console.log(recipes);\r\n\r\n  const getQuery = (e)=>{\r\n    e.preventDefault()\r\n    setQuery(search)\r\n    setSearch('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form className=\"search-form\" onSubmit={getQuery}>\r\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={(e)=>setSearch(e.target.value)}></input>\r\n        <button className=\"search-button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n      <div className=\"recipes\"> \r\n      {recipes.map((recipe) => (\r\n        \r\n        <Recipes\r\n          key={recipe.recipe.label}\r\n          title={recipe.recipe.label}\r\n          calories={recipe.recipe.calories}\r\n          img={recipe.recipe.image}\r\n          ingredients={recipe.recipe.ingredients}\r\n        />\r\n      ))}\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2rYjm\",\"image\":\"recipe_image__1vm5d\"};"],"sourceRoot":""}